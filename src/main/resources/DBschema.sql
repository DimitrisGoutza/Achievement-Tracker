DROP SCHEMA IF EXISTS `ACHIEVEMENT_TRACKER`;

CREATE SCHEMA `ACHIEVEMENT_TRACKER`;

USE `ACHIEVEMENT_TRACKER`;

--
-- Table structure for table `GAME`
--

CREATE TABLE `GAME` (
    `STORE_ID` bigint NOT NULL,
    `STEAM_APP_ID` bigint NOT NULL,
    `TITLE` varchar(200) NOT NULL,
    `RELEASE_DATE` date DEFAULT NULL,
    `COMING_SOON` tinyint(1) NOT NULL,
    `RATING` DECIMAL(5,2) NULL,
    `SHORT_DESCRIPTION` text NOT NULL,
    `LONG_DESCRIPTION` text NOT NULL,
    `HEADER_IMAGE` varchar(100) NOT NULL,
    `CAPSULE_IMAGE` varchar(100) NOT NULL,
    `CAPSULE_SMALL_IMAGE` varchar(100) NOT NULL,
    `BACKGROUND_IMAGE` varchar(100) NOT NULL,
    `BACKGROUND_RAW_IMAGE` varchar(100) NOT NULL,
    `CHALLENGE_RATING` int NOT NULL,
    `AVERAGE_COMPLETION` decimal(5,2) DEFAULT NULL,
    `DIFFICULTY_SPREAD` decimal(5,2) DEFAULT NULL,
    PRIMARY KEY (`STORE_ID`),
    INDEX `IDX_TITLE_ASC` (`TITLE` ASC),
    INDEX `IDX_TITLE_DESC` (`TITLE` DESC),
    INDEX `IDX_RELEASE_DATE_ASC` (`RELEASE_DATE` ASC),
    INDEX `IDX_RELEASE_DATE_DESC` (`RELEASE_DATE` DESC),
    INDEX `IDX_RATING_ASC` (`RATING` ASC),
    INDEX `IDX_RATING_DESC` (`RATING` DESC),
    INDEX `IDX_CHALLENGE_RATING_ASC` (`CHALLENGE_RATING` ASC),
    INDEX `IDX_CHALLENGE_RATING_DESC` (`CHALLENGE_RATING` DESC),
    INDEX `IDX_AVERAGE_COMPLETION_ASC` (`AVERAGE_COMPLETION` ASC),
    INDEX `IDX_AVERAGE_COMPLETION_DESC` (`AVERAGE_COMPLETION` DESC),
    INDEX `IDX_DIFFICULTY_SPREAD_ASC` (`DIFFICULTY_SPREAD` ASC),
    INDEX `IDX_DIFFICULTY_SPREAD_DESC` (`DIFFICULTY_SPREAD` DESC)
);

--
-- Table structure for table `ACHIEVEMENT`
--

CREATE TABLE `ACHIEVEMENT` (
    `ID` bigint NOT NULL AUTO_INCREMENT,
    `NAME` varchar(125) NOT NULL,
    `DISPLAY_NAME` text NOT NULL,
    `DESCRIPTION` text,
    `HIDDEN` tinyint(1) NOT NULL,
    `ICON` varchar(125) NOT NULL,
    `ICON_GRAY` varchar(125) NOT NULL,
    `PERCENTAGE` decimal(5,2) NOT NULL,
    `POS` int NOT NULL,
    `GAME_ID` bigint NOT NULL,
    PRIMARY KEY (`ID`),
    INDEX `IDX_HIDDEN_DESC` (`HIDDEN` DESC),
    INDEX `IDX_PERCENTAGE_ASC` (`PERCENTAGE` ASC),
    INDEX `IDX_PERCENTAGE_DESC` (`PERCENTAGE` DESC),
    INDEX `IDX_POS_ASC` (`POS` ASC),
    INDEX `IDX_POS_DESC` (`POS` DESC),
    INDEX `FK_GAME_IDX` (`GAME_ID`),
    INDEX `IDX_GAME_ASC_POS_ASC` (`GAME_ID` ASC, `POS` ASC),
    INDEX `FK_GAME_HIDDEN_IDX` (`GAME_ID`, `HIDDEN` DESC),
    CONSTRAINT `FK_GAME` FOREIGN KEY (`GAME_ID`)
       REFERENCES `GAME` (`STORE_ID`)
       ON DELETE CASCADE ON UPDATE CASCADE
);

--
-- Table structure for table `CATEGORY`
--

CREATE TABLE `CATEGORY` (
    `ID` bigint NOT NULL AUTO_INCREMENT,
    `NAME` varchar(45) UNIQUE NOT NULL,
    `POPULARITY` int NOT NULL,
    PRIMARY KEY (`ID`),
    INDEX `IDX_POPULARITY_DESC` (`POPULARITY` DESC)
);

--
-- Table structure for table `GAME_CATEGORY`
--

CREATE TABLE `GAME_CATEGORY` (
    `GAME_ID` bigint NOT NULL,
    `CATEGORY_ID` bigint NOT NULL,
    `VOTES` int NOT NULL,
    INDEX `FK_GAME_IDX` (`GAME_ID`),
    INDEX `FK_CATEGORY_IDX` (`CATEGORY_ID`),
    INDEX `FK_CATEGORY_GAME_VOTES_DESC_IDX` (`CATEGORY_ID`, `GAME_ID`, `VOTES` DESC),
    CONSTRAINT `FK_CATEGORY_TO_GAME` FOREIGN KEY (`CATEGORY_ID`)
        REFERENCES `CATEGORY` (`ID`)
        ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT `FK_GAME_TO_CATEGORY` FOREIGN KEY (`GAME_ID`)
        REFERENCES `GAME` (`STORE_ID`)
        ON DELETE CASCADE ON UPDATE CASCADE
);