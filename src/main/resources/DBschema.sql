DROP SCHEMA IF EXISTS `ACHIEVEMENT_TRACKER`;

CREATE SCHEMA `ACHIEVEMENT_TRACKER`;

USE `ACHIEVEMENT_TRACKER`;

--
-- Table structure for table `GAME`
--

CREATE TABLE `GAME` (
    `STORE_ID` bigint NOT NULL,
    `STEAM_APP_ID` bigint NOT NULL,
    `TITLE` varchar(200) NOT NULL,
    `RELEASE_DATE` date DEFAULT NULL,
    `COMING_SOON` tinyint(1) NOT NULL,
    `RATING` DECIMAL(5,2) NULL,
    `REVIEWS` INT NOT NULL,
    `SHORT_DESCRIPTION` text NOT NULL,
    `LONG_DESCRIPTION` text NOT NULL,
    `HEADER_IMAGE` varchar(100) NOT NULL,
    `CAPSULE_IMAGE` varchar(100) NOT NULL,
    `CAPSULE_SMALL_IMAGE` varchar(100) NOT NULL,
    `BACKGROUND_IMAGE` varchar(100) NOT NULL,
    `BACKGROUND_RAW_IMAGE` varchar(100) NOT NULL,
    `CHALLENGE_RATING` int NOT NULL,
    `AVERAGE_COMPLETION` decimal(5,2) DEFAULT NULL,
    `DIFFICULTY_SPREAD` decimal(5,2) DEFAULT NULL,
    PRIMARY KEY (`STORE_ID`),
    INDEX `TITLE(ASC)` (`TITLE` ASC),
    INDEX `TITLE(DESC)` (`TITLE` DESC),
    INDEX `RELEASE(ASC)` (`RELEASE_DATE` ASC),
    INDEX `RELEASE(DESC)` (`RELEASE_DATE` DESC),
    INDEX `RATING(ASC)` (`RATING` ASC),
    INDEX `RATING(DESC)` (`RATING` DESC),
    INDEX `DIFFICULTY-SPREAD(ASC)` (`DIFFICULTY_SPREAD` ASC),
    INDEX `DIFFICULTY-SPREAD(DESC)` (`DIFFICULTY_SPREAD` DESC),
    INDEX `CHALLENGE-RATING(ASC)` (`CHALLENGE_RATING` ASC),
    INDEX `CHALLENGE-RATING(DESC)` (`CHALLENGE_RATING` DESC),
    INDEX `REVIEWS(ASC)` (`REVIEWS` ASC),
    FULLTEXT `TITLE(FULLTEXT)` (`TITLE`)
);

--
-- Table structure for table `ACHIEVEMENT`
--

CREATE TABLE `ACHIEVEMENT` (
    `ID` bigint NOT NULL AUTO_INCREMENT,
    `NAME` varchar(125) NOT NULL, /* TODO: make this column take more characters */
    `DISPLAY_NAME` text NOT NULL,
    `DESCRIPTION` text,
    `HIDDEN` tinyint(1) NOT NULL,
    `ICON` varchar(125) NOT NULL,
    `ICON_GRAY` varchar(125) NOT NULL,
    `PERCENTAGE` decimal(5,2) NOT NULL,
    `POS` int NOT NULL,
    `GAME_ID` bigint NOT NULL,
    PRIMARY KEY (`ID`),
    INDEX `GAME(ASC)_POS(ASC)` (`GAME_ID` ASC, `POS` ASC),
    INDEX `GAME(ASC)_HIDDEN(DESC)` (`GAME_ID`, `HIDDEN` DESC),
    CONSTRAINT `FK_GAME` FOREIGN KEY (`GAME_ID`)
       REFERENCES `GAME` (`STORE_ID`)
       ON DELETE CASCADE ON UPDATE CASCADE
);

--
-- Table structure for table `CATEGORY`
--

CREATE TABLE `CATEGORY` (
    `ID` bigint NOT NULL AUTO_INCREMENT,
    `NAME` varchar(45) UNIQUE NOT NULL,
    `POPULARITY` int NOT NULL,
    PRIMARY KEY (`ID`),
    INDEX `POPULARITY_DESC` (`POPULARITY` DESC)
);

--
-- Table structure for table `GAME_CATEGORY`
--

CREATE TABLE `GAME_CATEGORY` (
    `GAME_ID` bigint NOT NULL,
    `CATEGORY_ID` bigint NOT NULL,
    `VOTES` int NOT NULL,
    INDEX `GAME` (`GAME_ID`),
    INDEX `CATEGORY_GAME` (`CATEGORY_ID`, `GAME_ID`),
    CONSTRAINT `FK_CATEGORY_TO_GAME` FOREIGN KEY (`CATEGORY_ID`)
        REFERENCES `CATEGORY` (`ID`)
        ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT `FK_GAME_TO_CATEGORY` FOREIGN KEY (`GAME_ID`)
        REFERENCES `GAME` (`STORE_ID`)
        ON DELETE CASCADE ON UPDATE CASCADE
);